# Auto-generated
daemon off;

user nginx nginx;
pid /var/run/nginx.pid;

worker_processes auto;

# Logging to stderr enables better integration with Docker and GKE/Kubernetes.
error_log stderr warn;

events { worker_connections 4096; }

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log /dev/stdout;

    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;

    #keepalive_timeout  65;
    # see https://blog.percy.io/tuning-nginx-behind-google-cloud-platform-http-s-load-balancer-305982ddb340#.k3tvjlcnx
    # Tune nginx keepalives to work with the GCP HTTP(S) Load Balancer:
    keepalive_timeout 650;
    keepalive_requests 10000;

    types_hash_max_size 2048;

	# https://www.ssllabs.com
	# https://mozilla.github.io/server-side-tls/ssl-config-generator/

	ssl_certificate /etc/nginx/ssl/nginx.crt;
	ssl_certificate_key /etc/nginx/ssl/nginx.key;

	ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

	resolver 8.8.8.8 8.8.4.4 valid=300s ipv6=off;
	resolver_timeout 5s;

    gzip            on;
    gzip_disable    "msie6";
    gzip_min_length 2000;
    gzip_types      text/plain text/css text/xml application/json application/javascript application/xml;
    gzip_proxied    any;

    large_client_header_buffers 4 16k;

    #Imports...
    include /etc/nginx/proxy_params;
    include /etc/nginx/sites-enabled/*;
    include /var/lib/nginx/extra/*;

    server {
        # expose status but on a different port to avoid external visibility / conflicts with the app.
        listen $LISTEN_STATUS_PORT;
        location /healthz {
            return 200;
            access_log off;
        }
        location / {
            root /dev/null;
        }
    }
}
